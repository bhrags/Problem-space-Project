library(forecast)
library(plotly)
library(seasonal)
library(zoo)
library(tseries)
library(fpp2)
library(ggplot2)
Reg<-read.csv(file.choose())
Reg<-Reg[,c(2,23,24,25,26,27)]
Reg.ts<-ts(Reg, start = c(2011, 1),end = c(2017,1),frequency = 12)
##Holt winter
options(repr.plot.width = 6, repr.plot.height = 3)
ggplot(Reg,aes(x=month,y=sales))+geom_line()+geom_smooth(method='lm')
Regdecom <- decompose(Reg.ts)
plot(Regdecom)
saleslog <- Reg.ts
salesloghw <- HoltWinters(saleslog)
salesloghw
nextyearsales <- forecast(salesloghw, h=12)
par(mar = rep(4,4))
autoplot(nextyearsales)+labs(title="Demand of Reg")
nextyearsales

plot(residuals(nextyearsales))
accuracy(nextyearsales)

###Data partioning
nValid <- 16
nTrain <- 84-nValid
Reg.train.ts<-window(Reg.ts, end= c(2011, 2+nTrain))
autoplot(Reg.train.ts)
Reg.test.ts<-window(Reg.ts, start = c(2011, 2+nTrain+1))
autoplot(Reg.test.ts)
Reg.train.lm.ts<-window(Reg.ts, end = c(2011, 2+nTrain))
Reg.test.lm.ts<-window(Reg.ts, start = c(2011, 2+nTrain+1))
autoplot(Reg.test.lm.ts)
autoplot(Reg.train.lm.ts)
arima.Reg<-auto.arima(Reg.train.ts)
arima.Reg
forecast.arima.Reg<-forecast(arima.Reg, h = nValid)
autoplot(forecast.arima.Reg)+labs(title="Demand of Reg")
checkresiduals(forecast.arima.Reg)
pre.arima.Reg<-accuracy(forecast.arima.Reg, Reg.test.ts)
pre.arima.Reg

###Arima
cycle(Reg.ts)
adf.test(diff(log(Reg.ts)), alternative="stationary", k=0)
acf(log(Reg.ts))
acf(diff(log(Reg.ts)))

(fit <- arima(log(Reg.ts), c(0, 1, 1),seasonal = list(order = c(0, 1, 1), period = 12)))
pred <- predict(fit, n.ahead = 3*12)
2.718^pred$pred
ts.plot(Reg.ts,2.718^pred$pred, log = "y", lty = c(1,3))
accuracy(fit)
forecast::accuracy(forecast.arima.Reg, Reg.test.ts)


###Multivariate Regression
Reg<-read.csv(file.choose())
Reg<-Reg[,c(2,23,24,25,26,27)]
Reg.ts<-ts(Reg, start = c(2011, 1),end = c(2017,1),frequency = 12)
fit.linear.Reg<-tslm(Total_sales~Holiday+winter+sping+summer+Autumn,Reg.train.lm.ts)
summary(fit.linear.Reg)
checkresiduals(fit.linear.Reg)
autoplot(Reg.train.ts)+autolayer(fit.linear.Reg$fitted.values)
CV(fit.linear.Reg)

b<-Reg[c(68:84),]
View(b)
View(Reg.test.lm.ts)
newdata = b
fcast.fit.linear.Reg<-forecast(fit.linear.Reg, h = nValid, newdata = newdata)
summary(fcast.fit.linear.Reg)

autoplot(fcast.fit.linear.Reg)
autoplot(Reg.train.ts)+ autolayer(fcast.fit.linear.Reg$fitted) + ylab("Demand for Reg(units)") + ggtitle("Regression model fit on test data")
autoplot(fcast.fit.linear.Reg$residuals)
autoplot(Reg.test.ts)

accuracy(fcast.fit.linear.Reg)

